name: "Continuous Evaluation"

env:
  PYTHON_VERSION: '3.12'

on:
  workflow_dispatch:
    inputs:
      run_evaluation:
        description: "Experiment Name"
        required: true
        type: string

permissions:
  contents: read

run-name: "Continuous Evaluation ${{ github.event.inputs.run_evaluation }}"

jobs:
  ce:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python version
        uses: actions/setup-python@v3.0.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
    
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r experimentation/requirements_exp.txt
          pip install -r evaluation/requirements_eval.txt
     
      - name: Create .env file for experimentation
        run: |
          cd experimentation
          touch .env
          echo "IS_DEVELOPMENT=true" >> .env
          echo "GLOBAL_LLM_SERVICE=AzureOpenAI" >> .env
          echo "AZURE_OPENAI_CHAT_DEPLOYMENT_NAME=${{ secrets.AZURE_OPENAI_CHAT_DEPLOYMENT_NAME }}" >> .env
          echo "AZURE_OPENAI_ENDPOINT=${{ secrets.AZURE_OPENAI_ENDPOINT }}" >> .env
          echo "AZURE_OPENAI_API_KEY=${{ secrets.AZURE_OPENAI_API_KEY }}" >> .env
          echo "AZURE_OPENAI_API_VERSION=${{ secrets.AZURE_OPENAI_API_VERSION }}" >> .env
          echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> .env
          echo "MYSQL_PORT=${{ secrets.MYSQL_PORT }}" >> .env
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
      
      - name: Batch experiment
        run: |
          cd experimentation
          if [ -z "${{ github.event.inputs.run_evaluation }}" ]; then
            EXPERIMENT_NAME="CE Batch Experiment $(date +'%Y-%m-%d %H:%M')"
          else
            EXPERIMENT_NAME="${{ github.event.inputs.run_evaluation }}"
          fi
          python app_experiment_batch.py ./data/batch_input/queries.jsonl ../evaluation/.evaluation_input_data_batch/ "${EXPERIMENT_NAME}"

      - name: Create .env file for evaluation
        run: |
          cd evaluation
          touch .env
          echo "AIPROJECT_CONNECTION_STRING=${{ secrets.AIPROJECT_CONNECTION_STRING }}" >> .env
          echo "EVALUATION_MODEL=${{ secrets.EVALUATION_MODEL }}" >> .env

      - name: Azure login using service principal
        uses: azure/login@a65d910e8af852a8061c627c456678983e180302 #v2.2.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Batch evaluation
        run: |
          cd evaluation
          if [ -z "${{ github.event.inputs.run_evaluation }}" ]; then
            EXPERIMENT_NAME="CE Batch Evaluation $(date +'%Y-%m-%d %H:%M')"
          else
            EXPERIMENT_NAME="${{ github.event.inputs.run_evaluation }}"
          fi
          for file in .evaluation_input_data_batch/*; do
            AGENT_NAME=$(echo $file | cut -d'/' -f2 | cut -d'.' -f1)
            if [ "${AGENT_NAME}" == "executor" ]; then
              continue
            fi
            python ./run_azure_ai_foundry_local_eval.py "${EXPERIMENT_NAME}_${AGENT_NAME}" $file
          done
